[{"/Users/vergelbarit/Documents/gmail-clone/src/index.js":"1","/Users/vergelbarit/Documents/gmail-clone/src/serviceWorker.js":"2","/Users/vergelbarit/Documents/gmail-clone/src/App.js":"3","/Users/vergelbarit/Documents/gmail-clone/src/app/store.js":"4","/Users/vergelbarit/Documents/gmail-clone/src/features/counter/Counter.js":"5","/Users/vergelbarit/Documents/gmail-clone/src/features/counter/counterSlice.js":"6","/Users/vergelbarit/Documents/gmail-clone/src/features/counter/counterAPI.js":"7","/Users/vergelbarit/Documents/gmail-clone/src/components/header/Header.js":"8","/Users/vergelbarit/Documents/gmail-clone/src/components/search/Search.js":"9","/Users/vergelbarit/Documents/gmail-clone/src/components/sidebar/RightSidebar.js":"10","/Users/vergelbarit/Documents/gmail-clone/src/components/sidebar/RightSideBarInbox.js":"11","/Users/vergelbarit/Documents/gmail-clone/src/components/iconText/IconText.js":"12","/Users/vergelbarit/Documents/gmail-clone/src/layout/mainLayout.js":"13","/Users/vergelbarit/Documents/gmail-clone/src/layout/MainLayout.js":"14","/Users/vergelbarit/Documents/gmail-clone/src/components/mainLayoutHeader/MainLayoutHeader.js":"15","/Users/vergelbarit/Documents/gmail-clone/src/components/tabbedContent/TabbedContent.js":"16","/Users/vergelbarit/Documents/gmail-clone/src/components/mailMessage/MailMessage.js":"17","/Users/vergelbarit/Documents/gmail-clone/src/components/newMessagePopup/newMessagePopup.js":"18","/Users/vergelbarit/Documents/gmail-clone/src/components/newMessagePopup/NewMessagePopup.js":"19","/Users/vergelbarit/Documents/gmail-clone/src/slices/messageSlices/MessageSlices.js":"20","/Users/vergelbarit/Documents/gmail-clone/src/components/inboxMailMessage/InboxMailMessage.js":"21","/Users/vergelbarit/Documents/gmail-clone/src/slices/chkMessages/chkMessageSlices.js":"22","/Users/vergelbarit/Documents/gmail-clone/src/components/leftDrawerMenu/LeftDrawerMenu.js":"23","/Users/vergelbarit/Documents/gmail-clone/src/components/login/Login.js":"24"},{"size":969,"mtime":1623896315373,"results":"25","hashOfConfig":"26"},{"size":5014,"mtime":1621897776380,"results":"27","hashOfConfig":"26"},{"size":1045,"mtime":1623896134137,"results":"28","hashOfConfig":"26"},{"size":422,"mtime":1622410197337,"results":"29","hashOfConfig":"26"},{"size":1934,"mtime":1622147270578,"results":"30","hashOfConfig":"26"},{"size":2776,"mtime":1623897195498,"results":"31","hashOfConfig":"26"},{"size":196,"mtime":1621897776379,"results":"32","hashOfConfig":"26"},{"size":3833,"mtime":1622597233544,"results":"33","hashOfConfig":"26"},{"size":723,"mtime":1621904946493,"results":"34","hashOfConfig":"26"},{"size":552,"mtime":1622096030224,"results":"35","hashOfConfig":"26"},{"size":1764,"mtime":1621991909585,"results":"36","hashOfConfig":"26"},{"size":365,"mtime":1621990443048,"results":"37","hashOfConfig":"26"},{"size":774,"mtime":1622190723337,"results":"38","hashOfConfig":"26"},{"size":686,"mtime":1623896168687,"results":"39","hashOfConfig":"26"},{"size":3532,"mtime":1622504698514,"results":"40","hashOfConfig":"26"},{"size":2445,"mtime":1622059064827,"results":"41","hashOfConfig":"26"},{"size":2269,"mtime":1622504609502,"results":"42","hashOfConfig":"26"},{"size":3422,"mtime":1622187520262,"results":"43","hashOfConfig":"26"},{"size":3388,"mtime":1622518938089,"results":"44","hashOfConfig":"26"},{"size":922,"mtime":1622426575283,"results":"45","hashOfConfig":"26"},{"size":409,"mtime":1622194855594,"results":"46","hashOfConfig":"26"},{"size":763,"mtime":1622414639755,"results":"47","hashOfConfig":"26"},{"size":2136,"mtime":1622596129606,"results":"48","hashOfConfig":"26"},{"size":925,"mtime":1623903225731,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"fvu0ou",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vergelbarit/Documents/gmail-clone/src/index.js",["111"],"/Users/vergelbarit/Documents/gmail-clone/src/serviceWorker.js",[],["112","113"],"/Users/vergelbarit/Documents/gmail-clone/src/App.js",["114","115","116","117"],"import React,{useState} from 'react';\nimport { Counter } from './features/counter/Counter';\nimport Header from './components/header/Header';\nimport RightSidebar from './components/sidebar/RightSidebar';\nimport MainLayout from './layout/MainLayout';\nimport NewMessagePopup from './components/newMessagePopup/NewMessagePopup';\nimport Login from './components/login/Login';\n\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  const [isNewMessage, setIsNewMessage] = useState(false);\n\n  const newMessageHandler = (isBool) => {\n    setIsNewMessage(isBool);\n  }\n  \n\n\n\n  return (\n    <Router>\n      \n        <div>\n            <Header/>\n            <div className=\"content\">\n              <RightSidebar onHandlerClick={newMessageHandler}/>\n              <Switch>\n                <MainLayout/>\n              </Switch>\n            </div>\n            {isNewMessage && <NewMessagePopup onHandlerClick={newMessageHandler}/>}\n        </div>\n   </Router>\n );\n}\n\nexport default App;\n","/Users/vergelbarit/Documents/gmail-clone/src/app/store.js",[],"/Users/vergelbarit/Documents/gmail-clone/src/features/counter/Counter.js",["118","119","120"],"import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nimport {\n  newMessage,\n  deleteMessage,\n  selectMessages\n} from '../../slices/messageSlices/MessageSlices';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const messageSlice = useSelector(selectMessages);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        \n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n    \n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","/Users/vergelbarit/Documents/gmail-clone/src/features/counter/counterSlice.js",["121"],"/Users/vergelbarit/Documents/gmail-clone/src/features/counter/counterAPI.js",[],"/Users/vergelbarit/Documents/gmail-clone/src/components/header/Header.js",["122","123"],"import React,{useState} from 'react';\nimport './Header.css'\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {Icon, IconButton}from '@material-ui/core';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n//components\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Search from '../search/Search';\nimport LeftDrawerMenu from '../leftDrawerMenu/LeftDrawerMenu';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles({\n    list: {\n      width: 250,\n    },\n    fullList: {\n      width: 'auto',\n    },\n});\n\nfunction Header() {\n    const classes = useStyles();\n    const [showDrawer, setShowDrawer] = useState(false)\n    const onBurgerClickMenu = (isShow) => {\n        setShowDrawer(isShow);\n    }\n    const list = (anchor) => (\n        <div\n          className={clsx(classes.list, {\n            [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n          })}\n          role=\"presentation\"\n          onClick={onBurgerClickMenu(anchor, false)}\n          onKeyDown={onBurgerClickMenu(anchor, false)}\n        >\n          <List>\n            {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n          <Divider />\n          <List>\n            {['All mail', 'Trash', 'Spam'].map((text, index) => (\n              <ListItem button key={text}>\n                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      );\n\n      const DrawerList = () => {\n          return (\n            <div>\n            {\n              <React.Fragment key={'left'}>\n                <Button onClick={onBurgerClickMenu( true)}>{'left'}</Button>\n                <Drawer anchor={'left'} open={showDrawer} onClose={()=>onBurgerClickMenu(false)}>\n                  {list('left')}\n                </Drawer>\n              </React.Fragment>\n           }\n          </div>\n          )\n      }\n\n    return (\n        <>\n        <div className=\"header\">\n            <div className=\"header_left\">\n                <IconButton onClick={()=>onBurgerClickMenu(true)}>\n                    <MenuIcon/>\n                </IconButton>\n                <img src=\"https://www.citypng.com/public/uploads/preview/-11597272377xtovj4zmfl.png\" alt=\"Gmail\" />\n            </div>\n            <div className=\"header_center\">\n                <Search/>\n            </div>\n            <div className=\"header_right\">\n                <IconButton>\n                    <HelpOutlineIcon/>\n                </IconButton>\n                <IconButton>\n                    <SettingsIcon/>\n                </IconButton>\n                <IconButton>\n                    <AppsIcon/>\n                </IconButton>\n                <IconButton>\n                    <AccountCircleIcon/>\n                </IconButton>\n            </div>\n        </div>\n        {showDrawer && <DrawerList/>}\n        </>\n    );\n}\n\nexport default Header;","/Users/vergelbarit/Documents/gmail-clone/src/components/search/Search.js",["124"],"import React from 'react';\nimport Input from '@material-ui/core/Input';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport {IconButton}from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport  './Search.css';\n\nfunction Search(props) {\n    return (\n        <div className=\"Search\">\n            <IconButton>\n                <SearchIcon/>\n            </IconButton>\n            <input className=\"Search_Input\"/>\n            <IconButton>\n                <CloseIcon/>\n            </IconButton>\n            <IconButton>\n                <ArrowDropDownIcon/>\n            </IconButton>\n        </div>\n    );\n}\n\nexport default Search;","/Users/vergelbarit/Documents/gmail-clone/src/components/sidebar/RightSidebar.js",[],"/Users/vergelbarit/Documents/gmail-clone/src/components/sidebar/RightSideBarInbox.js",[],"/Users/vergelbarit/Documents/gmail-clone/src/components/iconText/IconText.js",[],"/Users/vergelbarit/Documents/gmail-clone/src/layout/mainLayout.js",[],"/Users/vergelbarit/Documents/gmail-clone/src/layout/MainLayout.js",["125","126","127"],"import React from 'react';\nimport './MainLayout.css';\nimport MainLayoutHeader from '../components/mainLayoutHeader/MainLayoutHeader';\nimport TabbedContent from '../components/tabbedContent/TabbedContent';\nimport InboxMailMessage from '../components/inboxMailMessage/InboxMailMessage';\nimport {\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nfunction MainLayout({text}) {\n    return (\n        <div className=\"main-content\">\n            <MainLayoutHeader/>\n            <div className=\"tabbedContent\">\n\n            <Route exact path=\"/newmessage\">\n                <InboxMailMessage/>\n            </Route>\n            </div>\n        </div>\n    );\n}\n\nexport default MainLayout;","/Users/vergelbarit/Documents/gmail-clone/src/components/mainLayoutHeader/MainLayoutHeader.js",["128"],"import React,{useState} from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport {IconButton}from '@material-ui/core';\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport KeyboardIcon from '@material-ui/icons/Keyboard';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport './MainLayoutHeader.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n    newMessage,\n    deleteMessage,\n    selectMessages\n} from '../../slices/messageSlices/MessageSlices';\nimport {\n    checkMessages,\n    uncheckMessages,\n    selectCheckMessages\n} from '../../slices/chkMessages/chkMessageSlices';\n\nfunction MainLayoutHeader(props) {\n    const dispatch = useDispatch();\n    const [anchorEl, setAnchorEl] = useState(false);\n    const [isCheckAll, setCheckAll] = useState(false);\n    const checkSelectMessages = useSelector(selectCheckMessages)\n    const messageSlice = useSelector(selectMessages);\n    const openSimpleMenu = () => {\n        setAnchorEl(true);\n      };\n    \n    const handleClose = (e) => {\n        e.preventDefault();\n        setAnchorEl(false);\n    };\n\n    const handleDeleteMessage = (e) => {\n        dispatch(deleteMessage(checkSelectMessages));\n        checkSelectMessages.forEach((v) => {\n            dispatch(uncheckMessages(v));\n        });\n    }\n\n    const handleSelectAllChkMessage = () => {\n \n        if (!isCheckAll) {\n            messageSlice.forEach((v) => {\n                dispatch(checkMessages(v.id));\n            });\n            setCheckAll(true)\n        } else {\n            setCheckAll(false);\n            messageSlice.forEach((v) => {\n                dispatch(uncheckMessages(v.id));\n            });\n        }\n   \n        console.log(checkSelectMessages);\n    }\n    return (\n        <>\n        <div className=\"mainLayoutHeader\">\n            <div className=\"mainLayoutHeader-left\">\n                <Checkbox onClick={handleSelectAllChkMessage}>\n                    {console.log(checkSelectMessages)}\n                </Checkbox>\n                <IconButton>\n                    <ArrowDropDownIcon/>\n                </IconButton>\n                <IconButton>\n                    <RefreshIcon/>\n                </IconButton>\n                <IconButton onClick={handleDeleteMessage}>\n                    <DeleteIcon/>\n                </IconButton>\n                <IconButton onClick={openSimpleMenu}  aria-controls=\"simple-menu\" aria-haspopup=\"true\" >\n                     <MoreVertIcon/>\n              \n                </IconButton>\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={anchorEl}\n                    onClose={handleClose}\n                >\n                <MenuItem onClick={handleClose}>Delete</MenuItem>\n                </Menu>\n            </div>\n            <div className=\"mainLayoutHeader-right\">\n                <span>1-5 of 28,404</span>\n                <KeyboardArrowLeftIcon/>\n                <KeyboardArrowRightIcon/>\n                <KeyboardIcon/>\n                <ArrowDropDownIcon/>\n            </div>\n        </div>\n        </>\n    );\n}\n\nexport default MainLayoutHeader;","/Users/vergelbarit/Documents/gmail-clone/src/components/tabbedContent/TabbedContent.js",["129","130"],"import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport StayPrimaryPortraitIcon from '@material-ui/icons/StayPrimaryPortrait';\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer';\nimport './TabbedContent.css';\n\n\n//component\nimport MailMessage from '../mailMessage/MailMessage';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: 500,\n  },\n});\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`scrollable-force-tabpanel-${index}`}\n        aria-labelledby={`scrollable-force-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box p={3}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n  }\n  function a11yProps(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\nexport default function TabbedContent() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n    <Paper square className=\"tabbedContent\">\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        variant=\"fullWidth\"\n        indicatorColor=\"secondary\"\n        textColor=\"secondary\"\n        aria-label=\"icon label tabs example\"\n      >\n        <Tab icon={<StayPrimaryPortraitIcon />} label=\"Primary\" {...a11yProps(0)}  />\n        <Tab icon={<PeopleIcon />} label=\"Socials\" {...a11yProps(1)} />\n        <Tab icon={<LocalOfferIcon />} label=\"Promotions\"{...a11yProps(2)}  />\n      </Tabs>\n\n    </Paper>\n    <div className=\"tabbedPanel\">\n        <TabPanel value={value} index={0}>\n            <MailMessage/>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n            Item two\n            <MailMessage/>\n        </TabPanel>\n        <TabPanel value={value} index={2}>\n            Item three\n            <MailMessage/>\n        </TabPanel>\n    </div>\n    </>\n  );\n}\n","/Users/vergelbarit/Documents/gmail-clone/src/components/mailMessage/MailMessage.js",["131","132","133","134"],"import React, {useState} from 'react';\nimport './MailMessage.css';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport IconButton from '@material-ui/core/IconButton';\nimport {\n    selectMessages\n} from '../../slices/messageSlices/MessageSlices';\nimport {\n    uncheckMessages,\n    checkMessages,\n    selectCheckMessages\n  } from '../../slices/chkMessages/chkMessageSlices';\nimport {\n    Route,\n    Link,\n    useHistory\n  } from \"react-router-dom\";\n  \nimport { useSelector, useDispatch } from 'react-redux';\nfunction MailMessage(props) {\n    let history = useHistory();\n    const messageSlice = useSelector(selectMessages);\n    const checkMessageSlices = useSelector(selectCheckMessages);\n    \n    const dispatch = useDispatch();\n    \n    let msgContainer = [];\n\n    const onHandlerCheckMessage =  (msg) => {\n        let holder;\n        if (checkMessageSlices.length && checkMessageSlices.findIndex((v) => v === msg.id) > -1) {\n            dispatch(uncheckMessages(msg.id));\n        } else {\n            msgContainer = [...msgContainer, msg.id]\n            dispatch(checkMessages(msg.id));\n        }\n        console.log(checkMessageSlices);\n    }\n    return (\n        <>\n        {messageSlice && messageSlice.map((data) => {\n            return (<div className=\"mail-message\">\n                <div className=\"mail-box-left\">\n                    <Checkbox onClick={()=> onHandlerCheckMessage(data)} id={data.id} key={data.id} checked={checkMessageSlices.find((v)=>v === data.id) !== undefined}/>\n                    <IconButton>\n                        <StarBorderIcon/>\n                    </IconButton>\n                    <span className=\"mail-subject-message\">\n                        <Link to=\"/newmessage\">{data.subject}</Link> </span>\n                    <span className=\"mail-tag\"> </span>\n                </div>\n                <div className=\"mail-box-center\">\n                    <span className=\"maiil-descriptin-message\">{data.message}</span>\n                </div>\n                <div className=\"Mail-box-right\">\n                    <span className=\"mail-date-time\">Date and Time</span>\n                </div>\n            </div>)\n        })}\n\n        </>\n    );\n}\n\nexport default MailMessage;","/Users/vergelbarit/Documents/gmail-clone/src/components/newMessagePopup/newMessagePopup.js",[],"/Users/vergelbarit/Documents/gmail-clone/src/components/newMessagePopup/NewMessagePopup.js",["135","136","137","138","139","140","141","142","143"],"import React,{useState} from 'react';\nimport './NewMessagePopup.css';\nimport MinimizeIcon from '@material-ui/icons/Minimize';\nimport HeightIcon from '@material-ui/icons/Height';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from '../../features/counter/counterSlice';\n\nimport {\n    newMessage,\n    selectMessages\n  } from '../../slices/messageSlices/MessageSlices';\n\nfunction NewMessagePopup({onHandlerClick}) {\n    const initialMessage = {\n        id: '',\n        to: '',\n        subject: '',\n        messsage: '',\n        from: 'verge@gmail.com',\n    }\n\n\n    const dispatch = useDispatch();\n    const messageSlice = useSelector(selectMessages);\n    const [messages, setNewMessage] = useState(initialMessage)\n    const onHandlerClose= (isNew) => {\n        onHandlerClick(isNew);\n    }\n\n    const onHandlerTextChange = (inputData) => {\n       \n       setNewMessage({...messages, ...inputData})\n       \n    }\n    const onHandlerNewMessage = () => {\n        let newMessageko = {...messages, ...{'id': uuidv4()}};       \n        setNewMessage(newMessageko);\n        dispatch(newMessage(newMessageko))\n    }\n\n    const formInput = (obj, value)  => {\n        let objData = {};\n        objData[obj] = value;\n        onHandlerTextChange(objData)\n    }\n    const {to,subject,message,from} = messages;\n    return (\n        <div className=\"new-message-popup\">\n            <div className=\"new-message-header\">\n                <div className=\"new-message-popup-right\">\n                    <span>New Message</span>\n                </div>\n                <div classsName=\"new-message-popup-left\">\n                    <IconButton onClick={() => onHandlerClose(false)}>\n                        <MinimizeIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <div className=\"height-icon\">\n                        <HeightIcon/>\n                        </div>\n                    </IconButton>\n                    <IconButton onClick={() => onHandlerClose(false)}>\n                        <CloseIcon/>\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"message-to\">\n                <Input placeholder=\"To\" value={to} inputProps={{ 'aria-label': 'description' }}  onChange={(event) => formInput('to',event.target.value)} />\n                <Input placeholder=\"Subject\"  value={subject} inputProps={{ 'aria-label': 'description' }} onChange={(event) => formInput('subject', event.target.value)} />\n            </div>\n           \n            <div className=\"message-description\">\n                <TextField\n                    id=\"message-description\"\n                    multiline\n                    rows={13}\n                    defaultValue=\"\"\n                />\n            </div>\n            <div className=\"message-buttons\">\n            <Button variant=\"contained\" color=\"primary\" onClick={onHandlerNewMessage}>Send</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default NewMessagePopup;","/Users/vergelbarit/Documents/gmail-clone/src/slices/messageSlices/MessageSlices.js",["144","145"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    value: [],\n    status: 'idle',\n  };\n\n  export const messageSlice = createSlice({\n    name: 'messageSlice',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n      newMessage: (state, data) => {\n        state.value = [...state.value, data.payload]\n      },\n      deleteMessage: (state, data) => {\n        console.log(data);\n        data.payload.forEach(element => {\n          state.value = state.value.filter((val) => val.id != element)\n        });\n      },\n      updateMEssage: (state, data) => {\n          console.log(state.value);\n          console.log(data)\n\n      }\n    },\n  });\n\n  export const { newMessage, deleteMessage } = messageSlice.actions;\n  export const selectMessages = (state) => state.mailMessages.value;\n  export default messageSlice.reducer;","/Users/vergelbarit/Documents/gmail-clone/src/components/inboxMailMessage/InboxMailMessage.js",["146","147"],"import React from 'react';\nimport './InboxMailMessage.css';\n\nimport {\n    Route,\n    Link,\n    useHistory\n  } from \"react-router-dom\";\n\n\nfunction InboxMailMessage(props) {\n    let history = useHistory();\n    return (\n        <div className=\"mail-messages\">\n            <button onClick={()=>history.goBack()}>Back</button>\n            Inbox MailMessage\n        </div>\n    );\n}\n\nexport default InboxMailMessage;","/Users/vergelbarit/Documents/gmail-clone/src/slices/chkMessages/chkMessageSlices.js",["148","149"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    value: [],\n    status: 'idle',\n  };\n\n  export const chkMessagesSlices = createSlice({\n    name: 'chkMessagesSlices',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n      checkMessages: (state, data) => {\n        state.value = [...state.value, data.payload]\n      },\n      uncheckMessages: (state, data) => {\n        state.value = state.value.filter((val) => val != data.payload) \n      }\n    },\n  });\n\n  export const { checkMessages, uncheckMessages } = chkMessagesSlices.actions;\n  export const selectCheckMessages = (state) => state.checkMessage.value;\n  export default chkMessagesSlices.reducer;","/Users/vergelbarit/Documents/gmail-clone/src/components/leftDrawerMenu/LeftDrawerMenu.js",[],"/Users/vergelbarit/Documents/gmail-clone/src/components/login/Login.js",[],{"ruleId":"150","severity":1,"message":"151","line":13,"column":3,"nodeType":"152","messageId":"153","endLine":13,"endColumn":7},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"150","severity":1,"message":"158","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":17},{"ruleId":"150","severity":1,"message":"159","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":13},{"ruleId":"150","severity":1,"message":"160","line":13,"column":3,"nodeType":"152","messageId":"153","endLine":13,"endColumn":8},{"ruleId":"150","severity":1,"message":"151","line":14,"column":3,"nodeType":"152","messageId":"153","endLine":14,"endColumn":7},{"ruleId":"150","severity":1,"message":"161","line":14,"column":3,"nodeType":"152","messageId":"153","endLine":14,"endColumn":13},{"ruleId":"150","severity":1,"message":"162","line":15,"column":3,"nodeType":"152","messageId":"153","endLine":15,"endColumn":16},{"ruleId":"150","severity":1,"message":"163","line":21,"column":9,"nodeType":"152","messageId":"153","endLine":21,"endColumn":21},{"ruleId":"150","severity":1,"message":"164","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":20},{"ruleId":"150","severity":1,"message":"165","line":5,"column":9,"nodeType":"152","messageId":"153","endLine":5,"endColumn":13},{"ruleId":"150","severity":1,"message":"166","line":14,"column":8,"nodeType":"152","messageId":"153","endLine":14,"endColumn":22},{"ruleId":"150","severity":1,"message":"167","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":13},{"ruleId":"150","severity":1,"message":"168","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":21},{"ruleId":"150","severity":1,"message":"169","line":7,"column":5,"nodeType":"152","messageId":"153","endLine":7,"endColumn":11},{"ruleId":"150","severity":1,"message":"151","line":9,"column":5,"nodeType":"152","messageId":"153","endLine":9,"endColumn":9},{"ruleId":"150","severity":1,"message":"161","line":16,"column":5,"nodeType":"152","messageId":"153","endLine":16,"endColumn":15},{"ruleId":"150","severity":1,"message":"170","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":21},{"ruleId":"150","severity":1,"message":"171","line":52,"column":9,"nodeType":"152","messageId":"153","endLine":52,"endColumn":16},{"ruleId":"150","severity":1,"message":"172","line":1,"column":16,"nodeType":"152","messageId":"153","endLine":1,"endColumn":24},{"ruleId":"150","severity":1,"message":"160","line":15,"column":5,"nodeType":"152","messageId":"153","endLine":15,"endColumn":10},{"ruleId":"150","severity":1,"message":"173","line":22,"column":9,"nodeType":"152","messageId":"153","endLine":22,"endColumn":16},{"ruleId":"150","severity":1,"message":"174","line":31,"column":13,"nodeType":"152","messageId":"153","endLine":31,"endColumn":19},{"ruleId":"150","severity":1,"message":"175","line":14,"column":3,"nodeType":"152","messageId":"153","endLine":14,"endColumn":12},{"ruleId":"150","severity":1,"message":"176","line":15,"column":3,"nodeType":"152","messageId":"153","endLine":15,"endColumn":12},{"ruleId":"150","severity":1,"message":"177","line":16,"column":3,"nodeType":"152","messageId":"153","endLine":16,"endColumn":20},{"ruleId":"150","severity":1,"message":"178","line":17,"column":3,"nodeType":"152","messageId":"153","endLine":17,"endColumn":17},{"ruleId":"150","severity":1,"message":"179","line":18,"column":3,"nodeType":"152","messageId":"153","endLine":18,"endColumn":17},{"ruleId":"150","severity":1,"message":"180","line":19,"column":3,"nodeType":"152","messageId":"153","endLine":19,"endColumn":14},{"ruleId":"150","severity":1,"message":"163","line":38,"column":11,"nodeType":"152","messageId":"153","endLine":38,"endColumn":23},{"ruleId":"150","severity":1,"message":"181","line":60,"column":23,"nodeType":"152","messageId":"153","endLine":60,"endColumn":30},{"ruleId":"150","severity":1,"message":"182","line":60,"column":31,"nodeType":"152","messageId":"153","endLine":60,"endColumn":35},{"ruleId":"150","severity":1,"message":"183","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":19,"column":60,"nodeType":"186","messageId":"187","endLine":19,"endColumn":62},{"ruleId":"150","severity":1,"message":"160","line":5,"column":5,"nodeType":"152","messageId":"153","endLine":5,"endColumn":10},{"ruleId":"150","severity":1,"message":"151","line":6,"column":5,"nodeType":"152","messageId":"153","endLine":6,"endColumn":9},{"ruleId":"150","severity":1,"message":"183","line":1,"column":10,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"184","severity":1,"message":"185","line":17,"column":55,"nodeType":"186","messageId":"187","endLine":17,"endColumn":57},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["188"],"no-negated-in-lhs",["189"],"'Counter' is defined but never used.","'Login' is defined but never used.","'Route' is defined but never used.","'newMessage' is defined but never used.","'deleteMessage' is defined but never used.","'messageSlice' is assigned a value but never used.","'fetchCount' is defined but never used.","'Icon' is defined but never used.","'LeftDrawerMenu' is defined but never used.","'Input' is defined but never used.","'TabbedContent' is defined but never used.","'Switch' is defined but never used.","'PersonPinIcon' is defined but never used.","'classes' is assigned a value but never used.","'useState' is defined but never used.","'history' is assigned a value but never used.","'holder' is defined but never used.","'decrement' is defined but never used.","'increment' is defined but never used.","'incrementByAmount' is defined but never used.","'incrementAsync' is defined but never used.","'incrementIfOdd' is defined but never used.","'selectCount' is defined but never used.","'message' is assigned a value but never used.","'from' is assigned a value but never used.","'createAsyncThunk' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]