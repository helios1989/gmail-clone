{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: [],\n  status: 'idle'\n};\nexport const chkMessagesSlices = createSlice({\n  name: 'chkMessagesSlices',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    checkMessages: (state, data) => {\n      state.value = [...state.value, data.payload];\n      console.log(state.value);\n    },\n    uncheckMessages: (state, data) => {\n      console.log(data.payload);\n      state.value = state.value.filter(val => val != data.payload);\n      console.log(state.value);\n    }\n  }\n});\nexport const {\n  checkMessages,\n  uncheckMessages\n} = chkMessagesSlices.actions;\nexport const selectCheckMessages = state => state.checkMessage.value;\nexport default chkMessagesSlices.reducer;","map":{"version":3,"sources":["/Users/vergelbarit/Documents/gmail-clone/src/slices/chkMessages/chkMessageSlices.js"],"names":["createAsyncThunk","createSlice","initialState","value","status","chkMessagesSlices","name","reducers","checkMessages","state","data","payload","console","log","uncheckMessages","filter","val","actions","selectCheckMessages","checkMessage","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;AAKE,OAAO,MAAMC,iBAAiB,GAAGJ,WAAW,CAAC;AAC3CK,EAAAA,IAAI,EAAE,mBADqC;AAE3CJ,EAAAA,YAF2C;AAG3C;AACAK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC9BD,MAAAA,KAAK,CAACN,KAAN,GAAc,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiBO,IAAI,CAACC,OAAtB,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACN,KAAlB;AACD,KAJO;AAKRW,IAAAA,eAAe,EAAE,CAACL,KAAD,EAAQC,IAAR,KAAiB;AAChCE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,OAAjB;AACAF,MAAAA,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYY,MAAZ,CAAoBC,GAAD,IAASA,GAAG,IAAIN,IAAI,CAACC,OAAxC,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACN,KAAlB;AACD;AATO;AAJiC,CAAD,CAArC;AAiBP,OAAO,MAAM;AAAEK,EAAAA,aAAF;AAAiBM,EAAAA;AAAjB,IAAqCT,iBAAiB,CAACY,OAA7D;AACP,OAAO,MAAMC,mBAAmB,GAAIT,KAAD,IAAWA,KAAK,CAACU,YAAN,CAAmBhB,KAA1D;AACP,eAAeE,iBAAiB,CAACe,OAAjC","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    value: [],\n    status: 'idle',\n  };\n\n  export const chkMessagesSlices = createSlice({\n    name: 'chkMessagesSlices',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n      checkMessages: (state, data) => {\n        state.value = [...state.value, data.payload]\n        console.log(state.value)\n      },\n      uncheckMessages: (state, data) => {\n        console.log(data.payload);\n        state.value = state.value.filter((val) => val != data.payload)\n        console.log(state.value);\n      }\n    },\n  });\n\n  export const { checkMessages, uncheckMessages } = chkMessagesSlices.actions;\n  export const selectCheckMessages = (state) => state.checkMessage.value;\n  export default chkMessagesSlices.reducer;"]},"metadata":{},"sourceType":"module"}