{"ast":null,"code":"var _jsxFileName = \"/Users/vergelbarit/Documents/gmail-clone/src/features/counter/Counter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment, incrementByAmount, incrementAsync, incrementIfOdd, selectCount } from './counterSlice';\nimport styles from './Counter.module.css';\nimport { newMessage, deleteMessage, selectMessages } from '../../slices/messageSlices/MessageSlices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Counter() {\n  _s();\n\n  const count = useSelector(selectCount);\n  const messageSlice = useSelector(selectMessages);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n  const incrementValue = Number(incrementAmount) || 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Decrement value\",\n        onClick: () => dispatch(decrement()),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.value,\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        \"aria-label\": \"Increment value\",\n        onClick: () => dispatch(increment()),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.row,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.textbox,\n        \"aria-label\": \"Set increment amount\",\n        value: incrementAmount,\n        onChange: e => setIncrementAmount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => dispatch(incrementByAmount(incrementValue)),\n        children: \"Add Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.asyncButton,\n        onClick: () => dispatch(incrementAsync(incrementValue)),\n        children: \"Add Async\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => dispatch(incrementIfOdd(incrementValue)),\n        children: \"Add If Odd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Counter, \"1+hKuH8aZm4Bw/JAxfu46QWVSQ4=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/vergelbarit/Documents/gmail-clone/src/features/counter/Counter.js"],"names":["React","useState","useSelector","useDispatch","decrement","increment","incrementByAmount","incrementAsync","incrementIfOdd","selectCount","styles","newMessage","deleteMessage","selectMessages","Counter","count","messageSlice","dispatch","incrementAmount","setIncrementAmount","incrementValue","Number","row","button","value","textbox","e","target","asyncButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,iBAHF,EAIEC,cAJF,EAKEC,cALF,EAMEC,WANF,QAOO,gBAPP;AAQA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,SACEC,UADF,EAEEC,aAFF,EAGEC,cAHF,QAIO,0CAJP;;AAMA,OAAO,SAASC,OAAT,GAAmB;AAAA;;AACxB,QAAMC,KAAK,GAAGb,WAAW,CAACO,WAAD,CAAzB;AACA,QAAMO,YAAY,GAAGd,WAAW,CAACW,cAAD,CAAhC;AACA,QAAMI,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM,CAACe,eAAD,EAAkBC,kBAAlB,IAAwClB,QAAQ,CAAC,GAAD,CAAtD;AAEA,QAAMmB,cAAc,GAAGC,MAAM,CAACH,eAAD,CAAN,IAA2B,CAAlD;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAER,MAAM,CAACY,GAAvB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEZ,MAAM,CAACa,MADpB;AAEE,sBAAW,iBAFb;AAGE,QAAA,OAAO,EAAE,MAAMN,QAAQ,CAACb,SAAS,EAAV,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAM,QAAA,SAAS,EAAEM,MAAM,CAACc,KAAxB;AAAA,kBAAgCT;AAAhC;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AACE,QAAA,SAAS,EAAEL,MAAM,CAACa,MADpB;AAEE,sBAAW,iBAFb;AAGE,QAAA,OAAO,EAAE,MAAMN,QAAQ,CAACZ,SAAS,EAAV,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAmBE;AAAK,MAAA,SAAS,EAAEK,MAAM,CAACY,GAAvB;AAAA,8BACE;AACE,QAAA,SAAS,EAAEZ,MAAM,CAACe,OADpB;AAEE,sBAAW,sBAFb;AAGE,QAAA,KAAK,EAAEP,eAHT;AAIE,QAAA,QAAQ,EAAGQ,CAAD,IAAOP,kBAAkB,CAACO,CAAC,CAACC,MAAF,CAASH,KAAV;AAJrC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AACE,QAAA,SAAS,EAAEd,MAAM,CAACa,MADpB;AAEE,QAAA,OAAO,EAAE,MAAMN,QAAQ,CAACX,iBAAiB,CAACc,cAAD,CAAlB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AACE,QAAA,SAAS,EAAEV,MAAM,CAACkB,WADpB;AAEE,QAAA,OAAO,EAAE,MAAMX,QAAQ,CAACV,cAAc,CAACa,cAAD,CAAf,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAmBE;AACE,QAAA,SAAS,EAAEV,MAAM,CAACa,MADpB;AAEE,QAAA,OAAO,EAAE,MAAMN,QAAQ,CAACT,cAAc,CAACY,cAAD,CAAf,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgDD;;GAxDeN,O;UACAZ,W,EACOA,W,EACJC,W;;;KAHHW,O","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from './counterSlice';\nimport styles from './Counter.module.css';\n\nimport {\n  newMessage,\n  deleteMessage,\n  selectMessages\n} from '../../slices/messageSlices/MessageSlices';\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const messageSlice = useSelector(selectMessages);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState('2');\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n    \n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}