{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: [],\n  status: 'idle'\n};\nexport const messageSlice = createSlice({\n  name: 'messageSlice',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    newMessage: (state, data) => {\n      state.value = [...state.value, data.payload];\n    },\n    deleteMessage: (state, data) => {\n      data.forEach(element => {\n        state.value = state.value.filter(val => val.id != element);\n      });\n    },\n    updateMEssage: (state, data) => {\n      console.log(state.value);\n      console.log(data);\n    }\n  }\n});\nexport const {\n  newMessage,\n  deleteMessage\n} = messageSlice.actions;\nexport const selectMessages = state => state.mailMessages.value;\nexport default messageSlice.reducer;","map":{"version":3,"sources":["/Users/vergelbarit/Documents/gmail-clone/src/slices/messageSlices/MessageSlices.js"],"names":["createAsyncThunk","createSlice","initialState","value","status","messageSlice","name","reducers","newMessage","state","data","payload","deleteMessage","forEach","element","filter","val","id","updateMEssage","console","log","actions","selectMessages","mailMessages","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;AAKE,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AACtCK,EAAAA,IAAI,EAAE,cADgC;AAEtCJ,EAAAA,YAFsC;AAGtC;AACAK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC3BD,MAAAA,KAAK,CAACN,KAAN,GAAc,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiBO,IAAI,CAACC,OAAtB,CAAd;AACD,KAHO;AAIRC,IAAAA,aAAa,EAAE,CAACH,KAAD,EAAQC,IAAR,KAAiB;AAC9BA,MAAAA,IAAI,CAACG,OAAL,CAAaC,OAAO,IAAI;AACtBL,QAAAA,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYY,MAAZ,CAAoBC,GAAD,IAASA,GAAG,CAACC,EAAJ,IAAUH,OAAtC,CAAd;AACD,OAFD;AAGD,KARO;AASRI,IAAAA,aAAa,EAAE,CAACT,KAAD,EAAQC,IAAR,KAAiB;AAC5BS,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAK,CAACN,KAAlB;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEH;AAbO;AAJ4B,CAAD,CAAhC;AAqBP,OAAO,MAAM;AAAEF,EAAAA,UAAF;AAAcI,EAAAA;AAAd,IAAgCP,YAAY,CAACgB,OAAnD;AACP,OAAO,MAAMC,cAAc,GAAIb,KAAD,IAAWA,KAAK,CAACc,YAAN,CAAmBpB,KAArD;AACP,eAAeE,YAAY,CAACmB,OAA5B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    value: [],\n    status: 'idle',\n  };\n\n  export const messageSlice = createSlice({\n    name: 'messageSlice',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n      newMessage: (state, data) => {\n        state.value = [...state.value, data.payload]\n      },\n      deleteMessage: (state, data) => {\n        data.forEach(element => {\n          state.value = state.value.filter((val) => val.id != element)\n        });\n      },\n      updateMEssage: (state, data) => {\n          console.log(state.value);\n          console.log(data)\n\n      }\n    },\n  });\n\n  export const { newMessage, deleteMessage } = messageSlice.actions;\n  export const selectMessages = (state) => state.mailMessages.value;\n  export default messageSlice.reducer;"]},"metadata":{},"sourceType":"module"}