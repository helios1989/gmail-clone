{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  value: 0,\n  status: 'idle'\n};\nexport const messageSlice = createSlice({\n  name: 'messageSlice',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    newMessage: state => {\n      console.log(state); // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n\n      state.value += 5;\n    },\n    deleteMessage: state => {\n      state.value -= 5;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement\n} = messageSlice.actions;\nexport const selectMessages = state => state.messageSlice.value;","map":{"version":3,"sources":["/Users/vergelbarit/Documents/gmail-clone/src/slices/messageSlices/MessageSlices.js"],"names":["createAsyncThunk","createSlice","initialState","value","status","messageSlice","name","reducers","newMessage","state","console","log","deleteMessage","increment","decrement","actions","selectMessages"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,MAAM,EAAE;AAFS,CAArB;AAKE,OAAO,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AACtCK,EAAAA,IAAI,EAAE,cADgC;AAEtCJ,EAAAA,YAFsC;AAGtC;AACAK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,EAAGC,KAAD,IAAW;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADqB,CAErB;AACA;AACA;AACA;;AACAA,MAAAA,KAAK,CAACN,KAAN,IAAe,CAAf;AACD,KARO;AASRS,IAAAA,aAAa,EAAGH,KAAD,IAAW;AACxBA,MAAAA,KAAK,CAACN,KAAN,IAAe,CAAf;AACD;AAXO;AAJ4B,CAAD,CAAhC;AAmBP,OAAO,MAAM;AAAEU,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAA2BT,YAAY,CAACU,OAA9C;AACP,OAAO,MAAMC,cAAc,GAAIP,KAAD,IAAWA,KAAK,CAACJ,YAAN,CAAmBF,KAArD","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    value: 0,\n    status: 'idle',\n  };\n\n  export const messageSlice = createSlice({\n    name: 'messageSlice',\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n      newMessage: (state) => {\n        console.log(state);\n        // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n        // doesn't actually mutate the state because it uses the Immer library,\n        // which detects changes to a \"draft state\" and produces a brand new\n        // immutable state based off those changes\n        state.value += 5;\n      },\n      deleteMessage: (state) => {\n        state.value -= 5;\n      }\n    },\n  });\n\n  export const { increment, decrement } = messageSlice.actions;\n  export const selectMessages = (state) => state.messageSlice.value;"]},"metadata":{},"sourceType":"module"}