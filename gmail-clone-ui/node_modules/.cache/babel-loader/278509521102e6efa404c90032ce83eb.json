{"ast":null,"code":"var _jsxFileName = \"/Users/vergelbarit/Documents/gmail-clone/src/components/newMessagePopup/NewMessagePopup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './NewMessagePopup.css';\nimport MinimizeIcon from '@material-ui/icons/Minimize';\nimport HeightIcon from '@material-ui/icons/Height';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { decrement, increment, incrementByAmount, incrementAsync, incrementIfOdd, selectCount } from '../../features/counter/counterSlice';\nimport { newMessage, selectMessages } from '../../slices/messageSlices/MessageSlices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewMessagePopup({\n  onHandlerClick\n}) {\n  _s();\n\n  const initialMessage = {\n    to: '',\n    Subject: '',\n    messsage: '',\n    from: 'verge@gmail.com'\n  };\n  const dispatch = useDispatch();\n  const messageSlice = useSelector(selectMessages);\n  const [newMessage, setNewMessage] = useState(initialMessage);\n\n  const onHandlerClose = isNew => {\n    onHandlerClick(isNew);\n  };\n\n  const onHandlerTextChange = inputData => {\n    setNewMessage({ ...newMessage,\n      ...inputData\n    });\n    console.log(newMessage);\n  };\n\n  const onHandlerNewMessage = () => {\n    console.log('data');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-message-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-message-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-message-popup-right\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"New Message \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        classsName: \"new-message-popup-left\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MinimizeIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"height-icon\",\n            children: /*#__PURE__*/_jsxDEV(HeightIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => onHandlerClose(false),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-to\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"To\",\n        inputProps: {\n          'aria-label': 'description'\n        },\n        onChange: event => onHandlerTextChange({\n          'to': event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Subject\",\n        inputProps: {\n          'aria-label': 'description'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-description\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"message-description\",\n        multiline: true,\n        rows: 13,\n        defaultValue: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-buttons\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: onHandlerNewMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewMessagePopup, \"tYn9GRut0uU3AOBRE6XyElzc688=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = NewMessagePopup;\nexport default NewMessagePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMessagePopup\");","map":{"version":3,"sources":["/Users/vergelbarit/Documents/gmail-clone/src/components/newMessagePopup/NewMessagePopup.js"],"names":["React","useState","MinimizeIcon","HeightIcon","IconButton","CloseIcon","Input","TextField","Button","useSelector","useDispatch","decrement","increment","incrementByAmount","incrementAsync","incrementIfOdd","selectCount","newMessage","selectMessages","NewMessagePopup","onHandlerClick","initialMessage","to","Subject","messsage","from","dispatch","messageSlice","setNewMessage","onHandlerClose","isNew","onHandlerTextChange","inputData","console","log","onHandlerNewMessage","event","target","value"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport './NewMessagePopup.css';\nimport MinimizeIcon from '@material-ui/icons/Minimize';\nimport HeightIcon from '@material-ui/icons/Height';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Input from '@material-ui/core/Input';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from '../../features/counter/counterSlice';\n\nimport {\n    newMessage,\n    selectMessages\n  } from '../../slices/messageSlices/MessageSlices';\n\nfunction NewMessagePopup({onHandlerClick}) {\n    const initialMessage = {\n        to: '',\n        Subject: '',\n        messsage: '',\n        from: 'verge@gmail.com',\n    }\n\n\n    const dispatch = useDispatch();\n    const messageSlice = useSelector(selectMessages);\n    const [newMessage, setNewMessage] = useState(initialMessage)\n    const onHandlerClose= (isNew) => {\n        onHandlerClick(isNew);\n    }\n    const onHandlerTextChange = (inputData) => {\n       setNewMessage({...newMessage, ...inputData})\n       console.log(newMessage);\n    }\n    const onHandlerNewMessage = () => {\n        console.log('data')\n    }\n    return (\n        <div className=\"new-message-popup\">\n            <div className=\"new-message-header\">\n                <div className=\"new-message-popup-right\">\n                    <span>New Message </span>\n                </div>\n                <div classsName=\"new-message-popup-left\">\n                    <IconButton>\n                        <MinimizeIcon/>\n                    </IconButton>\n                    <IconButton>\n                        <div className=\"height-icon\">\n                        <HeightIcon/>\n                        </div>\n                    </IconButton>\n                    <IconButton onClick={() => onHandlerClose(false)}>\n                        <CloseIcon/>\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"message-to\">\n                <Input placeholder=\"To\" inputProps={{ 'aria-label': 'description' }}  onChange={(event) => onHandlerTextChange({'to': event.target.value})} />\n                <Input placeholder=\"Subject\" inputProps={{ 'aria-label': 'description' }} />\n            </div>\n           \n            <div className=\"message-description\">\n                <TextField\n                    id=\"message-description\"\n                    multiline\n                    rows={13}\n                    defaultValue=\"\"\n                />\n            </div>\n            <div className=\"message-buttons\">\n            <Button variant=\"contained\" color=\"primary\" onClick={onHandlerNewMessage}>Send</Button>\n            </div>\n        </div>\n    );\n}\n\nexport default NewMessagePopup;"]},"metadata":{},"sourceType":"module"}